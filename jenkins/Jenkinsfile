pipeline{
	agent {
		kubernetes {
            defaultContainer 'jnlp'
            yamlFile 'build.yaml'
        }
	}
 	stages{
// 		stage('Test') {
// 		      steps {
// 			script {
// 				nodejs(nodeJSInstallationName:'nodejs'){
				
// 					sh "npm install -g jest && npm install --include=dev jest-junit && npm install && npm run  test tests/"
// 				}
// 			}
// 		      }
// 		      post {
// 			always {
// 			  step([$class: 'CoberturaPublisher', coberturaReportFile: './cobertura-coverage.xml'])
// 			}
// 		      }
// 		    }
		stage("SonarQube"){
			steps{
				nodejs(nodeJSInstallationName:'nodejs'){	
		
				sh "npm install && npm run build"
					script {
					withSonarQubeEnv('sonarqube'){
					sh "${tool("sonarqube-container")}/bin/sonar-scanner \
					  -Dsonar.projectKey=test \
					  -Dsonar.sources=. \
					  -Dsonar.host.url=http://129.151.139.181:9000 \
					  -Dsonar.login=f63392c1ba820340860f44314880c1197389b2b4"
						}
					}
				}
			}
			
		}
		stage("Quality gate") {
			    steps {
				waitForQualityGate abortPipeline: true
			    }
			}
	
        
 
// 		stage("Image Build and Push "){
// 			steps {
// 				container('podman') {
// 					sh  "podman build ./nodejs -t elamin88/node-test"			
// 					withCredentials([usernamePassword(credentialsId: "dockerhub-amin",
// 													usernameVariable: 'USERNAME',
// 													passwordVariable: 'PASSWORD')]) {
// 						sh "podman login -u ${USERNAME} -p ${PASSWORD} docker.io --tls-verify=false"
// 						sh "podman push elamin88/node-test --tls-verify=false"
// 					}
// 				}
// 			}
// 		}


// 		stage("Helm"){
// 			steps {
// 				container('helm') {
// 						sh "helm -n abdo upgrade --install nodejs ./chart"
// 				}
// 			}
// 		}
	}
}
